{"version":3,"sources":["../src/drag-n-drop.js"],"names":["$","document","ready","on","interact","draggable","inertia","restrict","restriction","endOnly","elementRect","top","left","bottom","right","autoScroll","onmove","dragMoveListener","onend","event","textEl","target","querySelector","textContent","Math","sqrt","pow","pageX","x0","pageY","y0","toFixed","x","parseFloat","getAttribute","dx","y","dy","style","webkitTransform","transform","setAttribute"],"mappings":"AAAA,CAAC,YAAY;AACTA,MAAEC,QAAF,EAAYC,KAAZ,CAAkB,YAAM;AACpBF,UAAE,MAAF,EAAUG,EAAV,CAAa,kBAAb,EAAiC,iBAAS;AACtCC,qBAAS,gBAAT,EACKC,SADL,CACe;AACP;AACAC,yBAAS,IAFF;AAGP;AACAC,0BAAU;AACNC,iCAAa,QADP;AAENC,6BAAS,IAFH;AAGNC,iCAAa,EAAEC,KAAK,CAAP,EAAUC,MAAM,CAAhB,EAAmBC,QAAQ,CAA3B,EAA8BC,OAAO,CAArC;AAHP,iBAJH;AASP;AACAC,4BAAY,IAVL;;AAYP;AACAC,wBAAQC,gBAbD;AAcP;AACAC,uBAAO,eAAUC,KAAV,EAAiB;AACpB,wBAAIC,SAASD,MAAME,MAAN,CAAaC,aAAb,CAA2B,GAA3B,CAAb;;AAEAF,+BAAWA,OAAOG,WAAP,GACP,yBACGC,KAAKC,IAAL,CAAUD,KAAKE,GAAL,CAASP,MAAMQ,KAAN,GAAcR,MAAMS,EAA7B,EAAiC,CAAjC,IACTJ,KAAKE,GAAL,CAASP,MAAMU,KAAN,GAAcV,MAAMW,EAA7B,EAAiC,CAAjC,CADS,GAC6B,CADvC,CAAD,CAEGC,OAFH,CAEW,CAFX,CADF,GAGkB,IAJtB;AAKH;AAvBM,aADf;AA0BI;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEJ,qBAASd,gBAAT,CAA0BE,KAA1B,EAAiC;AAC7B,oBAAIE,SAASF,MAAME,MAAnB;;AACI;AACAW,oBAAI,CAACC,WAAWZ,OAAOa,YAAP,CAAoB,QAApB,CAAX,KAA6C,CAA9C,IAAmDf,MAAMgB,EAFjE;AAAA,oBAGIC,IAAI,CAACH,WAAWZ,OAAOa,YAAP,CAAoB,QAApB,CAAX,KAA6C,CAA9C,IAAmDf,MAAMkB,EAHjE;;AAKA;AACAhB,uBAAOiB,KAAP,CAAaC,eAAb,GACIlB,OAAOiB,KAAP,CAAaE,SAAb,GACA,eAAeR,CAAf,GAAmB,MAAnB,GAA4BI,CAA5B,GAAgC,KAFpC;;AAIA;AACAf,uBAAOoB,YAAP,CAAoB,QAApB,EAA8BT,CAA9B;AACAX,uBAAOoB,YAAP,CAAoB,QAApB,EAA8BL,CAA9B;AACH;AACJ,SAhFD;AAiFH,KAlFD;AAmFH,CApFD","file":"drag-n-drop.js","sourcesContent":["(function () {\r\n    $(document).ready(() => {\r\n        $('body').on('mouseup touchend', event => {\r\n            interact('body :not(div)')\r\n                .draggable({\r\n                    // enable inertial throwing\r\n                    inertia: true,\r\n                    // keep the element within the area of it's parent\r\n                    restrict: {\r\n                        restriction: \"parent\",\r\n                        endOnly: true,\r\n                        elementRect: { top: 0, left: 0, bottom: 1, right: 1 }\r\n                    },\r\n                    // enable autoScroll\r\n                    autoScroll: true,\r\n\r\n                    // call this function on every dragmove event\r\n                    onmove: dragMoveListener,\r\n                    // call this function on every dragend event\r\n                    onend: function (event) {\r\n                        var textEl = event.target.querySelector('p');\r\n\r\n                        textEl && (textEl.textContent =\r\n                            'moved a distance of '\r\n                            + (Math.sqrt(Math.pow(event.pageX - event.x0, 2) +\r\n                                Math.pow(event.pageY - event.y0, 2) | 0))\r\n                                .toFixed(2) + 'px');\r\n                    }\r\n                })\r\n                // .resizable({\r\n                //     // resize from all edges and corners\r\n                //     edges: { left: true, right: true, bottom: true, top: true },\r\n\r\n                //     // keep the edges inside the parent\r\n                //     restrictEdges: {\r\n                //         outer: 'parent',\r\n                //         endOnly: true,\r\n                //     },\r\n\r\n                //     // minimum size\r\n                //     restrictSize: {\r\n                //         min: { width: 100, height: 50 },\r\n                //     },\r\n\r\n                //     inertia: true,\r\n                // })\r\n                // .on('resizemove', function (event) {\r\n                //     var target = event.target,\r\n                //         x = (parseFloat(target.getAttribute('data-x')) || 0),\r\n                //         y = (parseFloat(target.getAttribute('data-y')) || 0);\r\n\r\n                //     // update the element's style\r\n                //     target.style.width = event.rect.width + 'px';\r\n                //     target.style.height = event.rect.height + 'px';\r\n\r\n                //     // translate when resizing from top or left edges\r\n                //     x += event.deltaRect.left;\r\n                //     y += event.deltaRect.top;\r\n\r\n                //     target.style.webkitTransform = target.style.transform =\r\n                //         'translate(' + x + 'px,' + y + 'px)';\r\n\r\n                //     target.setAttribute('data-x', x);\r\n                //     target.setAttribute('data-y', y);\r\n                //     target.textContent = Math.round(event.rect.width) + '\\u00D7' + Math.round(event.rect.height);\r\n                // });\r\n\r\n            function dragMoveListener(event) {\r\n                var target = event.target,\r\n                    // keep the dragged position in the data-x/data-y attributes\r\n                    x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx,\r\n                    y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy;\r\n\r\n                // translate the element\r\n                target.style.webkitTransform =\r\n                    target.style.transform =\r\n                    'translate(' + x + 'px, ' + y + 'px)';\r\n\r\n                // update the posiion attributes\r\n                target.setAttribute('data-x', x);\r\n                target.setAttribute('data-y', y);\r\n            }\r\n        });\r\n    });\r\n})();"]}